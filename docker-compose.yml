version: '3.7'

services:
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: 'unless-stopped'
    networks:
      - backend
  client:
    build:
      context: ./config_module
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    container_name: client
    stdin_open: true
    volumes:
      - ./config_module:/usr/src/app/config_module
      - /usr/src/app/config_module/node_modules
  server:
    build:
      context: ./scanner_module
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: server
    ports:
      - '3001:3001'
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_HOST: mysql
      MYSQL_DATABASE: scan_module_db
    volumes:
      - ./scanner_module:/usr/src/app/scanner_module
      - /usr/src/app/scanner_module/node_modules
    restart: 'unless-stopped'
    networks:
      - backend
    links:
      - mysql
    depends_on:
      - mysql
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: scan_module_db
    volumes:
      - data:/var/lib/mysql
    ports:
      - '3306:3306'
    networks:
      - backend
networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
